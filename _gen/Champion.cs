
// This file is automatically generated.
// Do not directly edit.
// Generated on 2019-03-05T02:25:19.603Z

using System;
using System.Linq;

namespace MingweiSamuel.Camille.Enums
{
    /// <summary>
    /// Numeric champion IDs.
    /// </summary>
    [Obsolete("ChampionId is deprecated, use Champion instead.")]
    public static class ChampionId
    {
        public const int Aatrox = 266;
        public const int Ahri = 103;
        public const int Akali = 84;
        public const int Alistar = 12;
        public const int Amumu = 32;
        public const int Anivia = 34;
        public const int Annie = 1;
        public const int Ashe = 22;
        public const int AurelionSol = 136;
        public const int Azir = 268;
        public const int Bard = 432;
        public const int Blitzcrank = 53;
        public const int Brand = 63;
        public const int Braum = 201;
        public const int Caitlyn = 51;
        public const int Camille = 164;
        public const int Cassiopeia = 69;
        public const int ChoGath = 31;
        public const int Corki = 42;
        public const int Darius = 122;
        public const int Diana = 131;
        public const int Draven = 119;
        public const int DrMundo = 36;
        public const int Ekko = 245;
        public const int Elise = 60;
        public const int Evelynn = 28;
        public const int Ezreal = 81;
        public const int Fiddlesticks = 9;
        public const int Fiora = 114;
        public const int Fizz = 105;
        public const int Galio = 3;
        public const int Gangplank = 41;
        public const int Garen = 86;
        public const int Gnar = 150;
        public const int Gragas = 79;
        public const int Graves = 104;
        public const int Hecarim = 120;
        public const int Heimerdinger = 74;
        public const int Illaoi = 420;
        public const int Irelia = 39;
        public const int Ivern = 427;
        public const int Janna = 40;
        public const int JarvanIV = 59;
        public const int Jax = 24;
        public const int Jayce = 126;
        public const int Jhin = 202;
        public const int Jinx = 222;
        public const int KaiSa = 145;
        public const int Kalista = 429;
        public const int Karma = 43;
        public const int Karthus = 30;
        public const int Kassadin = 38;
        public const int Katarina = 55;
        public const int Kayle = 10;
        public const int Kayn = 141;
        public const int Kennen = 85;
        public const int KhaZix = 121;
        public const int Kindred = 203;
        public const int Kled = 240;
        public const int KogMaw = 96;
        public const int LeBlanc = 7;
        public const int LeeSin = 64;
        public const int Leona = 89;
        public const int Lissandra = 127;
        public const int Lucian = 236;
        public const int Lulu = 117;
        public const int Lux = 99;
        public const int Malphite = 54;
        public const int Malzahar = 90;
        public const int Maokai = 57;
        public const int MasterYi = 11;
        public const int MissFortune = 21;
        public const int Wukong = 62;
        public const int Mordekaiser = 82;
        public const int Morgana = 25;
        public const int Nami = 267;
        public const int Nasus = 75;
        public const int Nautilus = 111;
        public const int Neeko = 518;
        public const int Nidalee = 76;
        public const int Nocturne = 56;
        public const int NunuWillump = 20;
        public const int Olaf = 2;
        public const int Orianna = 61;
        public const int Ornn = 516;
        public const int Pantheon = 80;
        public const int Poppy = 78;
        public const int Pyke = 555;
        public const int Quinn = 133;
        public const int Rakan = 497;
        public const int Rammus = 33;
        public const int RekSai = 421;
        public const int Renekton = 58;
        public const int Rengar = 107;
        public const int Riven = 92;
        public const int Rumble = 68;
        public const int Ryze = 13;
        public const int Sejuani = 113;
        public const int Shaco = 35;
        public const int Shen = 98;
        public const int Shyvana = 102;
        public const int Singed = 27;
        public const int Sion = 14;
        public const int Sivir = 15;
        public const int Skarner = 72;
        public const int Sona = 37;
        public const int Soraka = 16;
        public const int Swain = 50;
        public const int Sylas = 517;
        public const int Syndra = 134;
        public const int TahmKench = 223;
        public const int Taliyah = 163;
        public const int Talon = 91;
        public const int Taric = 44;
        public const int Teemo = 17;
        public const int Thresh = 412;
        public const int Tristana = 18;
        public const int Trundle = 48;
        public const int Tryndamere = 23;
        public const int TwistedFate = 4;
        public const int Twitch = 29;
        public const int Udyr = 77;
        public const int Urgot = 6;
        public const int Varus = 110;
        public const int Vayne = 67;
        public const int Veigar = 45;
        public const int VelKoz = 161;
        public const int Vi = 254;
        public const int Viktor = 112;
        public const int Vladimir = 8;
        public const int Volibear = 106;
        public const int Warwick = 19;
        public const int Xayah = 498;
        public const int Xerath = 101;
        public const int XinZhao = 5;
        public const int Yasuo = 157;
        public const int Yorick = 83;
        public const int Zac = 154;
        public const int Zed = 238;
        public const int Ziggs = 115;
        public const int Zilean = 26;
        public const int Zoe = 142;
        public const int Zyra = 143;
    }
    /// <summary>
    /// Champion enum based on ChampionIds.
    /// </summary>
    public enum Champion : int
    {
        AATROX = 266,
        AHRI = 103,
        AKALI = 84,
        ALISTAR = 12,
        AMUMU = 32,
        ANIVIA = 34,
        ANNIE = 1,
        ASHE = 22,
        AURELION_SOL = 136,
        AZIR = 268,
        BARD = 432,
        BLITZCRANK = 53,
        BRAND = 63,
        BRAUM = 201,
        CAITLYN = 51,
        CAMILLE = 164,
        CASSIOPEIA = 69,
        CHO_GATH = 31,
        CORKI = 42,
        DARIUS = 122,
        DIANA = 131,
        DRAVEN = 119,
        DR_MUNDO = 36,
        EKKO = 245,
        ELISE = 60,
        EVELYNN = 28,
        EZREAL = 81,
        FIDDLESTICKS = 9,
        FIORA = 114,
        FIZZ = 105,
        GALIO = 3,
        GANGPLANK = 41,
        GAREN = 86,
        GNAR = 150,
        GRAGAS = 79,
        GRAVES = 104,
        HECARIM = 120,
        HEIMERDINGER = 74,
        ILLAOI = 420,
        IRELIA = 39,
        IVERN = 427,
        JANNA = 40,
        JARVAN_IV = 59,
        JAX = 24,
        JAYCE = 126,
        JHIN = 202,
        JINX = 222,
        KAI_SA = 145,
        KALISTA = 429,
        KARMA = 43,
        KARTHUS = 30,
        KASSADIN = 38,
        KATARINA = 55,
        KAYLE = 10,
        KAYN = 141,
        KENNEN = 85,
        KHA_ZIX = 121,
        KINDRED = 203,
        KLED = 240,
        KOG_MAW = 96,
        LEBLANC = 7,
        LEE_SIN = 64,
        LEONA = 89,
        LISSANDRA = 127,
        LUCIAN = 236,
        LULU = 117,
        LUX = 99,
        MALPHITE = 54,
        MALZAHAR = 90,
        MAOKAI = 57,
        MASTER_YI = 11,
        MISS_FORTUNE = 21,
        WUKONG = 62,
        MORDEKAISER = 82,
        MORGANA = 25,
        NAMI = 267,
        NASUS = 75,
        NAUTILUS = 111,
        NEEKO = 518,
        NIDALEE = 76,
        NOCTURNE = 56,
        NUNU_WILLUMP = 20,
        OLAF = 2,
        ORIANNA = 61,
        ORNN = 516,
        PANTHEON = 80,
        POPPY = 78,
        PYKE = 555,
        QUINN = 133,
        RAKAN = 497,
        RAMMUS = 33,
        REK_SAI = 421,
        RENEKTON = 58,
        RENGAR = 107,
        RIVEN = 92,
        RUMBLE = 68,
        RYZE = 13,
        SEJUANI = 113,
        SHACO = 35,
        SHEN = 98,
        SHYVANA = 102,
        SINGED = 27,
        SION = 14,
        SIVIR = 15,
        SKARNER = 72,
        SONA = 37,
        SORAKA = 16,
        SWAIN = 50,
        SYLAS = 517,
        SYNDRA = 134,
        TAHM_KENCH = 223,
        TALIYAH = 163,
        TALON = 91,
        TARIC = 44,
        TEEMO = 17,
        THRESH = 412,
        TRISTANA = 18,
        TRUNDLE = 48,
        TRYNDAMERE = 23,
        TWISTED_FATE = 4,
        TWITCH = 29,
        UDYR = 77,
        URGOT = 6,
        VARUS = 110,
        VAYNE = 67,
        VEIGAR = 45,
        VEL_KOZ = 161,
        VI = 254,
        VIKTOR = 112,
        VLADIMIR = 8,
        VOLIBEAR = 106,
        WARWICK = 19,
        XAYAH = 498,
        XERATH = 101,
        XIN_ZHAO = 5,
        YASUO = 157,
        YORICK = 83,
        ZAC = 154,
        ZED = 238,
        ZIGGS = 115,
        ZILEAN = 26,
        ZOE = 142,
        ZYRA = 143,
    }

    public static class ChampionUtils
    {
        /// <summary>
        /// Return's the champion's human-readable name (en-US).
        /// </summary>
        /// <param name="val">The Champion value.</param>
        /// <param name="throwOnUnknown">
        /// If false (default), will return "UNKNOWN" on unknown champions.
        /// If true, throws an InvalidOperationException on unknown string identifiers.
        /// </param>
        /// <returns>Champion's name.</returns>
        public static string Name(this Champion val, bool throwOnUnknown = false)
        {
            switch ((int) val)
            {
                case 266: return "Aatrox";
                case 103: return "Ahri";
                case 84: return "Akali";
                case 12: return "Alistar";
                case 32: return "Amumu";
                case 34: return "Anivia";
                case 1: return "Annie";
                case 22: return "Ashe";
                case 136: return "Aurelion Sol";
                case 268: return "Azir";
                case 432: return "Bard";
                case 53: return "Blitzcrank";
                case 63: return "Brand";
                case 201: return "Braum";
                case 51: return "Caitlyn";
                case 164: return "Camille";
                case 69: return "Cassiopeia";
                case 31: return "Cho'Gath";
                case 42: return "Corki";
                case 122: return "Darius";
                case 131: return "Diana";
                case 119: return "Draven";
                case 36: return "Dr. Mundo";
                case 245: return "Ekko";
                case 60: return "Elise";
                case 28: return "Evelynn";
                case 81: return "Ezreal";
                case 9: return "Fiddlesticks";
                case 114: return "Fiora";
                case 105: return "Fizz";
                case 3: return "Galio";
                case 41: return "Gangplank";
                case 86: return "Garen";
                case 150: return "Gnar";
                case 79: return "Gragas";
                case 104: return "Graves";
                case 120: return "Hecarim";
                case 74: return "Heimerdinger";
                case 420: return "Illaoi";
                case 39: return "Irelia";
                case 427: return "Ivern";
                case 40: return "Janna";
                case 59: return "Jarvan IV";
                case 24: return "Jax";
                case 126: return "Jayce";
                case 202: return "Jhin";
                case 222: return "Jinx";
                case 145: return "Kai'Sa";
                case 429: return "Kalista";
                case 43: return "Karma";
                case 30: return "Karthus";
                case 38: return "Kassadin";
                case 55: return "Katarina";
                case 10: return "Kayle";
                case 141: return "Kayn";
                case 85: return "Kennen";
                case 121: return "Kha'Zix";
                case 203: return "Kindred";
                case 240: return "Kled";
                case 96: return "Kog'Maw";
                case 7: return "LeBlanc";
                case 64: return "Lee Sin";
                case 89: return "Leona";
                case 127: return "Lissandra";
                case 236: return "Lucian";
                case 117: return "Lulu";
                case 99: return "Lux";
                case 54: return "Malphite";
                case 90: return "Malzahar";
                case 57: return "Maokai";
                case 11: return "Master Yi";
                case 21: return "Miss Fortune";
                case 62: return "Wukong";
                case 82: return "Mordekaiser";
                case 25: return "Morgana";
                case 267: return "Nami";
                case 75: return "Nasus";
                case 111: return "Nautilus";
                case 518: return "Neeko";
                case 76: return "Nidalee";
                case 56: return "Nocturne";
                case 20: return "Nunu & Willump";
                case 2: return "Olaf";
                case 61: return "Orianna";
                case 516: return "Ornn";
                case 80: return "Pantheon";
                case 78: return "Poppy";
                case 555: return "Pyke";
                case 133: return "Quinn";
                case 497: return "Rakan";
                case 33: return "Rammus";
                case 421: return "Rek'Sai";
                case 58: return "Renekton";
                case 107: return "Rengar";
                case 92: return "Riven";
                case 68: return "Rumble";
                case 13: return "Ryze";
                case 113: return "Sejuani";
                case 35: return "Shaco";
                case 98: return "Shen";
                case 102: return "Shyvana";
                case 27: return "Singed";
                case 14: return "Sion";
                case 15: return "Sivir";
                case 72: return "Skarner";
                case 37: return "Sona";
                case 16: return "Soraka";
                case 50: return "Swain";
                case 517: return "Sylas";
                case 134: return "Syndra";
                case 223: return "Tahm Kench";
                case 163: return "Taliyah";
                case 91: return "Talon";
                case 44: return "Taric";
                case 17: return "Teemo";
                case 412: return "Thresh";
                case 18: return "Tristana";
                case 48: return "Trundle";
                case 23: return "Tryndamere";
                case 4: return "Twisted Fate";
                case 29: return "Twitch";
                case 77: return "Udyr";
                case 6: return "Urgot";
                case 110: return "Varus";
                case 67: return "Vayne";
                case 45: return "Veigar";
                case 161: return "Vel'Koz";
                case 254: return "Vi";
                case 112: return "Viktor";
                case 8: return "Vladimir";
                case 106: return "Volibear";
                case 19: return "Warwick";
                case 498: return "Xayah";
                case 101: return "Xerath";
                case 5: return "Xin Zhao";
                case 157: return "Yasuo";
                case 83: return "Yorick";
                case 154: return "Zac";
                case 238: return "Zed";
                case 115: return "Ziggs";
                case 26: return "Zilean";
                case 142: return "Zoe";
                case 143: return "Zyra";
                default:
                    if (throwOnUnknown)
                        throw new InvalidOperationException("Unknown champion ID: " + val);
                    return "UNKNOWN";
            }
        }

        /// <summary>
        /// Returns the champion's string identifier.
        /// 
        /// This is generally the same as their Name with spaces and symbols removed
        /// with notable exceptions in "MonkeyKing" (Wu Kong) and "Nunu" (Nunu &amp; Willump).
        /// </summary>
        /// <param name="val">The Champion value.</param>
        /// <param name="throwOnUnknown">
        /// If false (default), will return "UNKNOWN" on unknown champions.
        /// If true, throws an InvalidOperationException on unknown string identifiers.
        /// </param>
        /// <returns>Champion's string identifier.</returns>
        public static string Identifier(this Champion val, bool throwOnUnknown = false)
        {
            switch ((int) val)
            {
                case 266: return "Aatrox";
                case 103: return "Ahri";
                case 84: return "Akali";
                case 12: return "Alistar";
                case 32: return "Amumu";
                case 34: return "Anivia";
                case 1: return "Annie";
                case 22: return "Ashe";
                case 136: return "AurelionSol";
                case 268: return "Azir";
                case 432: return "Bard";
                case 53: return "Blitzcrank";
                case 63: return "Brand";
                case 201: return "Braum";
                case 51: return "Caitlyn";
                case 164: return "Camille";
                case 69: return "Cassiopeia";
                case 31: return "Chogath";
                case 42: return "Corki";
                case 122: return "Darius";
                case 131: return "Diana";
                case 119: return "Draven";
                case 36: return "DrMundo";
                case 245: return "Ekko";
                case 60: return "Elise";
                case 28: return "Evelynn";
                case 81: return "Ezreal";
                case 9: return "Fiddlesticks";
                case 114: return "Fiora";
                case 105: return "Fizz";
                case 3: return "Galio";
                case 41: return "Gangplank";
                case 86: return "Garen";
                case 150: return "Gnar";
                case 79: return "Gragas";
                case 104: return "Graves";
                case 120: return "Hecarim";
                case 74: return "Heimerdinger";
                case 420: return "Illaoi";
                case 39: return "Irelia";
                case 427: return "Ivern";
                case 40: return "Janna";
                case 59: return "JarvanIV";
                case 24: return "Jax";
                case 126: return "Jayce";
                case 202: return "Jhin";
                case 222: return "Jinx";
                case 145: return "Kaisa";
                case 429: return "Kalista";
                case 43: return "Karma";
                case 30: return "Karthus";
                case 38: return "Kassadin";
                case 55: return "Katarina";
                case 10: return "Kayle";
                case 141: return "Kayn";
                case 85: return "Kennen";
                case 121: return "Khazix";
                case 203: return "Kindred";
                case 240: return "Kled";
                case 96: return "KogMaw";
                case 7: return "Leblanc";
                case 64: return "LeeSin";
                case 89: return "Leona";
                case 127: return "Lissandra";
                case 236: return "Lucian";
                case 117: return "Lulu";
                case 99: return "Lux";
                case 54: return "Malphite";
                case 90: return "Malzahar";
                case 57: return "Maokai";
                case 11: return "MasterYi";
                case 21: return "MissFortune";
                case 62: return "MonkeyKing";
                case 82: return "Mordekaiser";
                case 25: return "Morgana";
                case 267: return "Nami";
                case 75: return "Nasus";
                case 111: return "Nautilus";
                case 518: return "Neeko";
                case 76: return "Nidalee";
                case 56: return "Nocturne";
                case 20: return "Nunu";
                case 2: return "Olaf";
                case 61: return "Orianna";
                case 516: return "Ornn";
                case 80: return "Pantheon";
                case 78: return "Poppy";
                case 555: return "Pyke";
                case 133: return "Quinn";
                case 497: return "Rakan";
                case 33: return "Rammus";
                case 421: return "RekSai";
                case 58: return "Renekton";
                case 107: return "Rengar";
                case 92: return "Riven";
                case 68: return "Rumble";
                case 13: return "Ryze";
                case 113: return "Sejuani";
                case 35: return "Shaco";
                case 98: return "Shen";
                case 102: return "Shyvana";
                case 27: return "Singed";
                case 14: return "Sion";
                case 15: return "Sivir";
                case 72: return "Skarner";
                case 37: return "Sona";
                case 16: return "Soraka";
                case 50: return "Swain";
                case 517: return "Sylas";
                case 134: return "Syndra";
                case 223: return "TahmKench";
                case 163: return "Taliyah";
                case 91: return "Talon";
                case 44: return "Taric";
                case 17: return "Teemo";
                case 412: return "Thresh";
                case 18: return "Tristana";
                case 48: return "Trundle";
                case 23: return "Tryndamere";
                case 4: return "TwistedFate";
                case 29: return "Twitch";
                case 77: return "Udyr";
                case 6: return "Urgot";
                case 110: return "Varus";
                case 67: return "Vayne";
                case 45: return "Veigar";
                case 161: return "Velkoz";
                case 254: return "Vi";
                case 112: return "Viktor";
                case 8: return "Vladimir";
                case 106: return "Volibear";
                case 19: return "Warwick";
                case 498: return "Xayah";
                case 101: return "Xerath";
                case 5: return "XinZhao";
                case 157: return "Yasuo";
                case 83: return "Yorick";
                case 154: return "Zac";
                case 238: return "Zed";
                case 115: return "Ziggs";
                case 26: return "Zilean";
                case 142: return "Zoe";
                case 143: return "Zyra";
                default:
                    if (throwOnUnknown)
                        throw new InvalidOperationException("Unknown champion ID: " + val);
                    return "UNKNOWN";
            }
        }

        /// <summary>
        /// Return's the Champion corresponding to a champion's string identifier or (en-US) name.
        ///
        /// This method will only look at the first four alphabetic characters in the given string.
        /// </summary>
        /// <param name="val">
        /// The string identifier or name. Only the first four alphabetic characters will be looked at.
        /// </param>
        /// <param name="throwOnUnknown">
        /// If false (default), will return 0 on unknown strings.
        /// If true, throws an InvalidOperationException on unknown strings.
        /// </param>
        /// <returns>Champion's name.</returns>
        public static Champion Parse(string val, bool throwOnUnknown = false)
        {
            switch (new string(val.ToCharArray()
                .Select(char.ToUpperInvariant)
                .Where(c => 'A' <= c && c <= 'Z')
                .Take(4).ToArray()))
            {
                case "AATR": return (Champion) 266;
                case "AHRI": return (Champion) 103;
                case "AKAL": return (Champion) 84;
                case "ALIS": return (Champion) 12;
                case "AMUM": return (Champion) 32;
                case "ANIV": return (Champion) 34;
                case "ANNI": return (Champion) 1;
                case "ASHE": return (Champion) 22;
                case "AURE": return (Champion) 136;
                case "AZIR": return (Champion) 268;
                case "BARD": return (Champion) 432;
                case "BLIT": return (Champion) 53;
                case "BRAN": return (Champion) 63;
                case "BRAU": return (Champion) 201;
                case "CAIT": return (Champion) 51;
                case "CAMI": return (Champion) 164;
                case "CASS": return (Champion) 69;
                case "CHOG": return (Champion) 31;
                case "CORK": return (Champion) 42;
                case "DARI": return (Champion) 122;
                case "DIAN": return (Champion) 131;
                case "DRAV": return (Champion) 119;
                case "DRMU": return (Champion) 36;
                case "EKKO": return (Champion) 245;
                case "ELIS": return (Champion) 60;
                case "EVEL": return (Champion) 28;
                case "EZRE": return (Champion) 81;
                case "FIDD": return (Champion) 9;
                case "FIOR": return (Champion) 114;
                case "FIZZ": return (Champion) 105;
                case "GALI": return (Champion) 3;
                case "GANG": return (Champion) 41;
                case "GARE": return (Champion) 86;
                case "GNAR": return (Champion) 150;
                case "GRAG": return (Champion) 79;
                case "GRAV": return (Champion) 104;
                case "HECA": return (Champion) 120;
                case "HEIM": return (Champion) 74;
                case "ILLA": return (Champion) 420;
                case "IREL": return (Champion) 39;
                case "IVER": return (Champion) 427;
                case "JANN": return (Champion) 40;
                case "JARV": return (Champion) 59;
                case "JAX": return (Champion) 24;
                case "JAYC": return (Champion) 126;
                case "JHIN": return (Champion) 202;
                case "JINX": return (Champion) 222;
                case "KAIS": return (Champion) 145;
                case "KALI": return (Champion) 429;
                case "KARM": return (Champion) 43;
                case "KART": return (Champion) 30;
                case "KASS": return (Champion) 38;
                case "KATA": return (Champion) 55;
                case "KAYL": return (Champion) 10;
                case "KAYN": return (Champion) 141;
                case "KENN": return (Champion) 85;
                case "KHAZ": return (Champion) 121;
                case "KIND": return (Champion) 203;
                case "KLED": return (Champion) 240;
                case "KOGM": return (Champion) 96;
                case "LEBL": return (Champion) 7;
                case "LEES": return (Champion) 64;
                case "LEON": return (Champion) 89;
                case "LISS": return (Champion) 127;
                case "LUCI": return (Champion) 236;
                case "LULU": return (Champion) 117;
                case "LUX": return (Champion) 99;
                case "MALP": return (Champion) 54;
                case "MALZ": return (Champion) 90;
                case "MAOK": return (Champion) 57;
                case "MAST": return (Champion) 11;
                case "MISS": return (Champion) 21;
                case "WUKO":
                case "MONK": return (Champion) 62;
                case "MORD": return (Champion) 82;
                case "MORG": return (Champion) 25;
                case "NAMI": return (Champion) 267;
                case "NASU": return (Champion) 75;
                case "NAUT": return (Champion) 111;
                case "NEEK": return (Champion) 518;
                case "NIDA": return (Champion) 76;
                case "NOCT": return (Champion) 56;
                case "NUNU": return (Champion) 20;
                case "OLAF": return (Champion) 2;
                case "ORIA": return (Champion) 61;
                case "ORNN": return (Champion) 516;
                case "PANT": return (Champion) 80;
                case "POPP": return (Champion) 78;
                case "PYKE": return (Champion) 555;
                case "QUIN": return (Champion) 133;
                case "RAKA": return (Champion) 497;
                case "RAMM": return (Champion) 33;
                case "REKS": return (Champion) 421;
                case "RENE": return (Champion) 58;
                case "RENG": return (Champion) 107;
                case "RIVE": return (Champion) 92;
                case "RUMB": return (Champion) 68;
                case "RYZE": return (Champion) 13;
                case "SEJU": return (Champion) 113;
                case "SHAC": return (Champion) 35;
                case "SHEN": return (Champion) 98;
                case "SHYV": return (Champion) 102;
                case "SING": return (Champion) 27;
                case "SION": return (Champion) 14;
                case "SIVI": return (Champion) 15;
                case "SKAR": return (Champion) 72;
                case "SONA": return (Champion) 37;
                case "SORA": return (Champion) 16;
                case "SWAI": return (Champion) 50;
                case "SYLA": return (Champion) 517;
                case "SYND": return (Champion) 134;
                case "TAHM": return (Champion) 223;
                case "TALI": return (Champion) 163;
                case "TALO": return (Champion) 91;
                case "TARI": return (Champion) 44;
                case "TEEM": return (Champion) 17;
                case "THRE": return (Champion) 412;
                case "TRIS": return (Champion) 18;
                case "TRUN": return (Champion) 48;
                case "TRYN": return (Champion) 23;
                case "TWIS": return (Champion) 4;
                case "TWIT": return (Champion) 29;
                case "UDYR": return (Champion) 77;
                case "URGO": return (Champion) 6;
                case "VARU": return (Champion) 110;
                case "VAYN": return (Champion) 67;
                case "VEIG": return (Champion) 45;
                case "VELK": return (Champion) 161;
                case "VI": return (Champion) 254;
                case "VIKT": return (Champion) 112;
                case "VLAD": return (Champion) 8;
                case "VOLI": return (Champion) 106;
                case "WARW": return (Champion) 19;
                case "XAYA": return (Champion) 498;
                case "XERA": return (Champion) 101;
                case "XINZ": return (Champion) 5;
                case "YASU": return (Champion) 157;
                case "YORI": return (Champion) 83;
                case "ZAC": return (Champion) 154;
                case "ZED": return (Champion) 238;
                case "ZIGG": return (Champion) 115;
                case "ZILE": return (Champion) 26;
                case "ZOE": return (Champion) 142;
                case "ZYRA": return (Champion) 143;
                default:
                    if (throwOnUnknown)
                        throw new InvalidOperationException("Unknown champion string identifier: " + val);
                    return 0;
            }
        }
    }
}
