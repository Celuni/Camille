{{
    const queues = require(it.path + '/.queues.json');
    const enumName = function(name) { return name.toUpperCase().replace(/['-]/, '').replace(/[^A-Z0-9]+/g, '_'); };
}}
// This file is automatically generated.
// Do not directly edit.
// Generated on {{= (new Date).toISOString() }}

using System;
using System.ComponentModel.DataAnnotations;

namespace Camille.Enums
{
    /// <summary>
    /// Queues enum based on queues.json.
    /// </summary>
#if USE_SYSTEXTJSON
    [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
#endif
    public enum Queue
    {
{{
    for (const { queueId, map, description, notes } of queues) {
        const deprecated = notes && notes.toUpperCase().includes('DEPRECATED');
        let name = map;
        if (description)
            name += '_' + description;
        if (deprecated)
            name += '_DEPRECATED_' + queueId;
}}
{{? deprecated }}
        [Obsolete("{{= notes }}")]
{{?}}
        [Display(Name = "{{= map }}", Description = "{{= description ? description : '' }}")]
        {{= enumName(name) }} = {{= queueId }},

{{
    }
}}
    }
}
